type Query {
    productsSortByPrice: [Product]!
    productsByCategory(categoryId: ID!): [Product!]!
    productById(id: ID!): Product
    users: [User]!
    userById(id: ID!): User
    categories: [Category]!
    categoryById(id: ID!): Category
}

type Mutation {
    createProduct(input: ProductInput!): Product!
    updateProduct(id: ID!, input: ProductInput!): Product!
    deleteProduct(id: ID!): Boolean!

    createUser(input: UserInput!): User!
    updateUser(id: ID!, input: UserInput!): User!
    deleteUser(id: ID!): Boolean!

    createCategory(input: CategoryInput!): Category!
    updateCategory(id: ID!, input: CategoryInput!): Category!
    deleteCategory(id: ID!): Boolean!
}

input ProductInput {
    productName: String!
    unitPrice: Float!
    description: String
    quantity: Int!
    categoryId: ID!
}

input UserInput {
    userName: String!
    fullName: String!
    email: String!
    password: String!
    phone: String!
}

input CategoryInput {
    categoryName: String!
    images: String
}

type Product {
    productId: ID!
    productName: String
    unitPrice: Float
    description: String
    quantity: Int
}

type User {
    userId: ID!
    userName: String
    fullName: String
    email: String
    password: String
    phone: String
}

type Category {
    categoryId: ID!
    categoryName: String
    images: String
}